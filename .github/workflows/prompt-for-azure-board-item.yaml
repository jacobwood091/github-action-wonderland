name: Azure Board Reference Check

on:
    pull_request:
        types: [opened, edited, ready_for_review, reopened]

jobs:
    check-for-azure-board-item:
        runs-on: ubuntu-latest
        permissions:
            statuses: write
            pull-requests: write
            contents: read
        steps:
            - name: Check for Azure Board Reference
              uses: actions/github-script@v7
              with:
                  script: |
                      // Skip validation for draft PRs
                      if (context.payload.pull_request.draft) {
                        console.log('‚è≠Ô∏è Skipping check for draft PR');
                        return;
                      }

                      const { owner, repo } = context.repo;
                      const pull_number = context.payload.pull_request.number;
                      const description = context.payload.pull_request.body || '';

                      // Check for AB number
                      const abRegex = /AB#\d+/;
                      const hasABNumber = abRegex.test(description);
                      const abMatch = description.match(abRegex);

                      // Check for "no-ab" override in description
                      const hasOverride = /\bno-ab\b/i.test(description);

                      const sha = context.payload.pull_request.head.sha;
                      const statusContext = 'Azure Board Reference';

                      if (hasABNumber) {
                        // Success case
                        await github.rest.repos.createCommitStatus({
                          owner,
                          repo,
                          sha,
                          state: 'success',
                          description: `Found Azure Board reference: ${abMatch[0]}`,
                          context: statusContext
                        });
                        
                        console.log('‚úÖ Azure Board item found:', abMatch[0]);
                        
                      } else if (hasOverride) {
                        // Override case
                        await github.rest.repos.createCommitStatus({
                          owner,
                          repo,
                          sha,
                          state: 'success',
                          description: 'Check bypassed using "no-ab" override',
                          context: statusContext
                        });
                        
                        console.log('‚úÖ Override applied (no-ab)');
                        
                      } else {
                        // Failure case
                        await github.rest.repos.createCommitStatus({
                          owner,
                          repo,
                          sha,
                          state: 'failure',
                          description: 'Add "AB#1234" to PR description or "no-ab" to bypass',
                          context: statusContext
                        });

                        // Add a helpful comment to the PR for failure cases
                        const commentBody = [
                          '## Azure Board Reference Required',
                          '',
                          'This pull request needs an Azure Board work item reference.',
                          '',
                          '**To resolve:** Add `AB#1234` to your PR description (replace with your work item number)',
                          '',
                          '**No work item needed?** Add `no-ab` to bypass this check',
                          '',
                          'This requirement helps maintain project traceability. Thanks! üôÇ'
                        ].join('\n');

                        // Check if we already commented to avoid spam
                        const { data: comments } = await github.rest.issues.listComments({
                          owner,
                          repo,
                          issue_number: pull_number,
                        });

                        const botComment = comments.find(comment => 
                          comment.user.type === 'Bot' && 
                          comment.body.includes('Azure Board Reference Required')
                        );

                        if (!botComment) {
                          await github.rest.issues.createComment({
                            owner,
                            repo,
                            issue_number: pull_number,
                            body: commentBody
                          });
                        }
                        
                        console.log('‚ùå Azure Board item required - Status and comment created');
                      }
